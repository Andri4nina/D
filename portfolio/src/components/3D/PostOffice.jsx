/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: LinjieFan (https://sketchfab.com/LinjieFan)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com3D-models/post-office-791b5788ad954a049457a3ca275d336f
Title: Post Office
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { RigidBody } from '@react-three/rapier'
import { useDayNight } from '../../contexts/DayNightContext';
import { useFrame, useThree } from '@react-three/fiber';
import * as THREE from 'three';

const MAX_LIGHT_DISTANCE = 50;

export function PostOffice({ ...props }) {
  const { nodes, materials } = useGLTF('/elements/post_office.glb')
  const { isNight } = useDayNight();
  const lightRef = useRef();
  const { camera } = useThree();

  useFrame(() => {
    if (!lightRef.current) return;

    const lanternPos = lightRef.current.getWorldPosition(new THREE.Vector3());
    const distance = lanternPos.distanceTo(camera.position);

    const shouldLight = isNight && distance < MAX_LIGHT_DISTANCE;
    const targetIntensity = shouldLight ? 10 : 0;

    lightRef.current.intensity = THREE.MathUtils.lerp(
      lightRef.current.intensity,
      targetIntensity,
      0.1 // Vitesse de fade
    );
  });
  return (
    <group>
      <pointLight
        ref={lightRef}
        position={[0, 4, 0]}
        color="white"
        intensity={0}
        distance={10}
        decay={2}
      />
      <group {...props} dispose={null} scale={1.35}>
        <RigidBody type='fixed' colliders="cuboid" >
          <group position={[-1.219, 0.163, 2.185]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_4.geometry}
              material={materials.yellow}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_5.geometry}
              material={materials.flag_black}
            />

          </group>
          <group position={[-1.46, 0.087, 1.928]} rotation={[0, 0, Math.PI / 2]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_7.geometry}
              material={materials.flag_black}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_8.geometry}
              material={materials.metal}
            />
          </group>
          <group position={[-1.226, 0.291, 2.225]} rotation={[0, -0.419, 0]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_14.geometry}
              material={materials.paper}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_15.geometry}
              material={materials.blue}
            />
          </group>
          <group
            position={[-1.222, 0.665, 2.277]}
            rotation={[0, 0.249, -Math.PI]}
            scale={[-1.047, 1.047, 1.047]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_19.geometry}
              material={materials.blue}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_20.geometry}
              material={materials.paper}
            />
          </group>
        </RigidBody>


        <RigidBody type='fixed' colliders="cuboid">
          <group position={[0.371, 1.045, 0.997]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_24.geometry}
              material={materials['green.003']}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_25.geometry}
              material={materials.glasses}
            />
          </group>
          <group position={[0.249, 1.59, -0.2]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_37.geometry}
              material={materials['green.002']}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_38.geometry}
              material={materials.gold}
            />
          </group>
          <group position={[0.272, 1.819, 1.316]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_40.geometry}
              material={materials.flag_black}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_41.geometry}
              material={materials.flag_orange}
            />
          </group>
        </RigidBody>

        <RigidBody type='fixed' colliders="cuboid">
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_10.geometry}
            material={materials.material_0}
            position={[-1.413, 0.106, 1.928]}
            rotation={[0, 0, Math.PI / 2]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_12.geometry}
            material={materials.metal}
            position={[-1.368, 0.506, 1.817]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_17.geometry}
            material={materials.yellow}
            position={[-1.222, 0.602, 2.277]}
            rotation={[0, 0.249, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_22.geometry}
            material={materials.gold}
            position={[0.309, 1.305, 1.012]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_27.geometry}
            material={materials.metal}
            position={[0.668, 0.97, 1.05]}
            rotation={[Math.PI / 2, 0, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_29.geometry}
            material={materials.yellow}
            position={[0.249, 2.957, 0.937]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_31.geometry}
            material={materials['yellow.001']}
            position={[0.249, 3.266, 0.992]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_33.geometry}
            material={materials.metal}
            position={[-0.322, 2.38, 0.939]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_35.geometry}
            material={materials.material}
            position={[0.249, 2.876, 1.019]}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_43.geometry}
            material={materials['red.001']}
            position={[-1.573, 0.375, 0.774]}
            rotation={[Math.PI / 2, 0, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_45.geometry}
            material={materials['blue.001']}
            position={[-1.573, 0.375, 0.201]}
            rotation={[Math.PI / 2, 0, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_47.geometry}
            material={materials['green.001']}
            position={[-1.573, 0.375, -0.372]}
            rotation={[Math.PI / 2, 0, 0]}
          />
        </RigidBody>
      </group>
    </group>

  )
}

useGLTF.preload('/elements/post_office.glb')